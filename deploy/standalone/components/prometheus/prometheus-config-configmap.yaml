apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: kube-system
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 20s
      external_labels:
        cluster: "production-cluster"
    #配置alertmanager地址用于报警
    alerting:
      alertmanagers:
        - scheme: http
          static_configs:
            - targets:
                - "alertmanager:9093"
    #记录规则和报警规则文件
    rule_files:
      - ./prometheus-alerts.yaml
      - ./prometheus-records.yaml
    scrape_configs:
    #监控 prometheus server
      - job_name: "prometheus-monitor/prometheus-server"
        scheme: http
        metrics_path: /metrics
        static_configs:
          - targets:
              - "localhost:9090"
            labels:
              cluster: production-cluster
        metric_relabel_configs:
          - source_labels:
              - "__name__"
            regex: go.*
            action: drop
    #监控 prometheus alertmanager
      - job_name: "prometheus-monitor/alertmanager"
        scheme: http
        metrics_path: /metrics
        static_configs:
          - targets:
              - "alertmanager:9093"
        metric_relabel_configs:
          - source_labels:
              - "__name__"
            regex: go.*
            action: drop
      - job_name: 'kubernetes-monitor/kube-etcd'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              name:
                - "kube-system"
        scheme: https
        #新版prometheus配置token字段变更为authorization
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
            action: keep
            regex: kube-system;kube-etcd
        tls_config:
          ca_file: /etc/prometheus/secrets/etcd-certs/ca.crt
          cert_file: /etc/prometheus/secrets/etcd-certs/healthcheck-client.crt
          key_file: /etc/prometheus/secrets/etcd-certs/healthcheck-client.key
          insecure_skip_verify: true
      - job_name: 'kubernetes-monitor/kube-scheduler'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              name:
                - "kube-system"
        scheme: https
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
            action: keep
            regex: kube-system;kube-scheduler
          - source_labels:
              - __address__
            regex: (.*):(.*)
            target_label: __address__
            replacement: "localhost:$2"
            action: replace
      - job_name: 'kubernetes-monitor/kube-controller-manager'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              name:
                - "kube-system"
        scheme: https
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
            action: keep
            regex: kube-system;kube-controller-manager
          - source_labels:
              - __address__
            regex: (.*):(.*)
            target_label: __address__
            replacement: "localhost:$2"
            action: replace
      - job_name: 'kubernetes-monitor/kube-proxy'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              name:
                - "kube-system"
        scheme: http
        metrics: /metrics
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
            action: keep
            regex: kube-system;kube-proxy
          - source_labels:
              - __address__
            regex: (.*):(.*)
            target_label: __address__
            replacement: "localhost:$2"
            action: replace
      - job_name: 'kubernetes-monitor/kube-apiserver'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      - job_name: 'kubernetes-monitor/kube-state-metrics'
        metrics_path: /metrics
        scheme: http
        static_configs:
          - targets:
              - kube-state-metrics:8080
    
      - job_name: 'kubernetes-monitor/kubelet'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      - job_name: 'kubernetes-monitor/nodes-cadvisor'
        metrics_path: /metrics
        scheme: https
        kubernetes_sd_configs:
          - role: node
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        relabel_configs:
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_node_label_kubernetes_io_hostname
            target_label: node
          - separator: ;
            regex: __meta_kubernetes_node_label_(.+)
            replacement: $1
            action: labelmap
          - separator: ;
            regex: (.*)
            target_label: __metrics_path__
            replacement: /metrics/cadvisor
            action: replace
      - job_name: 'kubernetes-monitor/coredns'
        scheme: http
        metrics: /metrics
        authorization:
          type: Bearer
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              name:
                - "kube-system"
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - source_labels: [__address__]
            action: replace
            target_label: instance
            regex: (.+):(.+)
            replacement: $1
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: (kube-dns)
          - source_labels: [ __meta_kubernetes_namespace ]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [ __meta_kubernetes_service_name ]
            action: replace
            target_label: kubernetes_service_name
    #收集节点metrics with node_exporter
      - job_name: 'kubernetes-monitor/node-exporter'
        scheme: http
        metrics: /metrics
        authorization:
          type: Bearer
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: endpoints
            node: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_endpoints_name]
            regex: 'node-exporter'
            action: keep
          - source_labels: [ __meta_kubernetes_endpoints_node_name ]
            target_label: node_name
            action: replace
          - source_labels: [ __meta_kubernetes_namespace ]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [ __meta_kubernetes_service_name ]
            action: replace
            target_label: kubernetes_service_name
          - regex: __meta_kubernetes_node_address_(.*)
            replacement: node_ip
            action: labelmap
